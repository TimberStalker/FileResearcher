<UserControl x:Class="FileResearcher.Controls.ReadTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FileResearcher.Controls"
             xmlns:debug="clr-namespace:FileResearcher.Controls.DebugModels"
             xmlns:resources="clr-namespace:FileResearcher.Resources"
             xmlns:tree="clr-namespace:FileReading.FileTree;assembly=FileReading"
             mc:Ignorable="d"
             AllowDrop="True"
             d:DataContext="{d:DesignInstance Type=debug:ReadTreeDebugModel,IsDesignTimeCreatable=True}"
             d:DesignHeight="450" d:DesignWidth="300"
             x:Name="uc">
    <UserControl.Resources>
        <resources:TreeNodeTemplateSelector x:Key="nodeTemplateSelector"/>
        <resources:ColorToBrushConverter x:Key="colorConverter"/>
        
        <HierarchicalDataTemplate x:Key="TreeDataType" ItemsSource="{Binding .}" DataType="{x:Type tree:TreeDataType}">
            <local:NodeDragWrapper VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CreateNodeArgs="{Binding .}" AllowDrop="True"
                                   AdornerChild="{Binding ., RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                   CreateDraggedNode="{Binding CreateDragNode, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <DockPanel VerticalAlignment="Stretch" SnapsToDevicePixels="True" LastChildFill="False">
                    <Rectangle VerticalAlignment="Stretch" SnapsToDevicePixels="True" Width="10px" Margin="0" Fill="{Binding ReadType.Color, Converter={StaticResource colorConverter}}"/>
                    <Label Content="{Binding ReadType.Name}" MinWidth="40" VerticalContentAlignment="Center"/>
                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="40" Height="20" 
                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                </DockPanel>
            </local:NodeDragWrapper>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="TreeArray" ItemsSource="{Binding .}" DataType="{x:Type tree:TreeArray}">
            <local:NodeDragWrapper VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CreateNodeArgs="{Binding .}" AllowDrop="True"
                                   AdornerChild="{Binding ., RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                   CreateDraggedNode="{Binding CreateDragNode, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <DockPanel VerticalAlignment="Stretch" SnapsToDevicePixels="True" LastChildFill="False">
                    <Rectangle VerticalAlignment="Stretch" SnapsToDevicePixels="True" Width="10px" Margin="0" Fill="{Binding ReadType.Color, Converter={StaticResource colorConverter}}"/>
                    <Label Content="{Binding ReadType.Name}" MinWidth="40" VerticalContentAlignment="Center"/>
                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="40" Height="20" 
                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                    <local:NodeDragWrapper AllowDrop="False" CreateDraggedNode="{Binding CreateDragNode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ReadTree}}" CreateNodeArgs="{Binding Index}">
                        <Border DataContext="{Binding Index}" BorderThickness="1" BorderBrush="DarkGray" CornerRadius="10" Margin="5,0" VerticalAlignment="Center" >
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="DeepSkyBlue"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Label Content="{Binding Name}" VerticalAlignment="Center" Margin="0" Padding="7,3" VerticalContentAlignment="Center"/>
                        </Border>
                    </local:NodeDragWrapper>
                </DockPanel>
            </local:NodeDragWrapper>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="TreeReference" ItemsSource="{Binding .}" DataType="{x:Type tree:TreeReference}">
            <local:NodeDragWrapper VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CreateNodeArgs="{Binding .}" AllowDrop="True"
                                   AdornerChild="{Binding ., RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                   CreateDraggedNode="{Binding CreateDragNode, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <DockPanel VerticalAlignment="Stretch" SnapsToDevicePixels="True" LastChildFill="False">
                    <Rectangle VerticalAlignment="Stretch" SnapsToDevicePixels="True" Width="10px" Margin="0" Fill="Gainsboro"/>
                    <Label Content="Ref" MinWidth="40" VerticalContentAlignment="Center"/>
                    <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="40" Height="20" 
                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                </DockPanel>
            </local:NodeDragWrapper>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    
    <TreeView x:Name="Tree" d:ItemsSource="{Binding TreeRoot}" HorizontalContentAlignment="Stretch" ItemTemplateSelector="{StaticResource nodeTemplateSelector}" ItemsSource="{Binding TreeRoot}" d:DataContext="{Binding .}" DataContext="{Binding .,ElementName=uc}">
        <TreeView.ItemContainerStyle>
            <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                <Setter Property="IsExpanded" Value="True"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeViewItem">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="UIElement.Focusable" Value="false" />
                                                <Setter Property="FrameworkElement.Width" Value="16" />
                                                <Setter Property="FrameworkElement.Height" Value="16" />
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                                <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                    <Path.Data>
                                                                        <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                    </Path.Data>
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                                </Trigger>
                                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border x:Name="Bd"
                                  HorizontalAlignment="Stretch"
                                  BorderThickness="{TemplateBinding Border.BorderThickness}"
                                  BorderBrush="{TemplateBinding Border.BorderBrush}"
                                  Padding="{TemplateBinding Control.Padding}"
                                  Background="{TemplateBinding Panel.Background}"
                                  SnapsToDevicePixels="True"
                                  Grid.Column="1">
                                        <ContentPresenter x:Name="PART_Header"
                                              Content="{TemplateBinding HeaderedContentControl.Header}"
                                              ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                              ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                                </Grid>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="#aF7BA3FF" />
                                    <Setter Property="BorderBrush" Value="#FF7BB3FF" />
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </TreeView.ItemContainerStyle>
    </TreeView>
</UserControl>
